# coding=utf-8
from mongoengine import *
import datetime

class PlayerYearStats(EmbeddedDocument):
    type = StringField()
    position = IntField()
    year = IntField()
    player_name = StringField()
    pdga_number = IntField()
    money_won = FloatField()
    tournaments_won = IntField()
    tournaments_played = IntField()
    highest_rated_round = IntField()
    highest_rated_round_number = IntField()
    highest_rated_round_tournament_id = IntField()
    highest_rated_round_tournament_name = StringField()
    lowest_rated_round = IntField()
    lowest_rated_round_number = IntField()
    lowest_rated_round_tournament_id = IntField()
    lowest_rated_round_tournament_name = StringField()

class DivisionYearStats(EmbeddedDocument):
    type = StringField(help_text="What is the statistics type")
    division_name = StringField(help_text="Division that this data is made from")
    players = ListField(EmbeddedDocumentField(PlayerYearStats))

class CountryYearlyStatistics(EmbeddedDocument):
    year = IntField(help_text="Year field in string as we want to have one option also for alltime")
    highest_rated_players = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 highest rated players with player id, player name, rating, money won that year, tournaments played that year, tournaments won that year")
    most_money_won = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 most money won players with player id, player name, rating, money won that year, tournaments played that year, tournaments won that year")
    most_tournaments_won = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 highest rated players with player id, player name, rating, money won that year, tournaments played that year, tournaments won that year")
    most_tournaments_played = ListField(EmbeddedDocumentField(DivisionYearStats))
    highest_rated_rounds = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 highest rated rounds for the year. Include player name, tournament name, player id, tournament id, round rating, round number")
    lowest_rated_rounds = ListField(EmbeddedDocumentField(DivisionYearStats))
    registered_players = IntField(help_text="Number of registered players during the year. Data from member_since field")
    active_players = IntField(help_text="Current number of players with active PDGA status, only collect this info for latest year as there is no reliable way to collect it for previous years")
    inactive_players = IntField(help_text="Current number of inactive players from total players minus unused numbers, only collect this info for latest year as there is no reliable way to collect it for previous years")
    total_money_won = FloatField(help_text="Total money won by players from the specific country during that year")

class CountryAnalytics(Document):
    country = StringField(help_text="Country which the analytics is from")
    yearly_statistics = ListField(EmbeddedDocumentField(CountryYearlyStatistics))
    highest_rated_players = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 highest rated players with player id, player name, rating, money won that year, tournaments played that year, tournaments won that year")
    most_money_won = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 most money won players with player id, player name, rating, money won that year, tournaments played that year, tournaments won that year")
    most_tournaments_won = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 highest rated players with player id, player name, rating, money won that year, tournaments played that year, tournaments won that year")
    most_tournaments_played = ListField(EmbeddedDocumentField(DivisionYearStats))
    highest_rated_rounds = ListField(EmbeddedDocumentField(DivisionYearStats), help_text="Include top 10 highest rated rounds for the year. Include player name, tournament name, player id, tournament id, round rating, round number")
    lowest_rated_rounds = ListField(EmbeddedDocumentField(DivisionYearStats))
    total_money_won = FloatField()
    total_tournament_count = IntField()
    total_throws = IntField()
    current_total_players = IntField()
    current_active_players = IntField(help_text="Current number of players with active PDGA status")
    current_inactive_players = IntField(help_text="Current number of inactive players from total players minus unused numbers")
    current_unused_pdga_numbers = IntField(help_text="Number of PDGA numbers inbetween first and last pdga number that are not being used")
    current_certified_players = IntField(help_text="Number of certified people currently")
    current_registered_players = IntField(help_text="Current total number of PDGA members minus unused pdga number")

class PlayerRound(EmbeddedDocument):
    round_number = IntField(help_text="Which round is the data from")
    round_throws = IntField(help_text="Total number of throws during this specific round")
    round_rating = IntField(help_text="Round rating for this specific round")
    round_placement = IntField(help_text="What was the player placement if only checking throws from this round")
    tournament_placement = IntField(help_text="What was the player placement if only checking up to this round")
    avg_throw_length_meters = FloatField(help_text="Calculate avg throw length for this specific round")
    avg_throw_length_feet = FloatField(help_text="Calculate avg throw length for this specific round")
    dns = BooleanField(default=False, help_text="Did the player DNS True/False")
    dnf = BooleanField(default=False, help_text="Did the player DNF True/False")

class DivisionRound(EmbeddedDocument):
    round_number = IntField(help_text="")
    round_total_players = IntField(help_text="Number of players from the division who participated on this round, leagues and finals will have different number of players each round")
    course_name = StringField(help_text="Course full name")
    course_layout = StringField(help_text="Course layout, can be default or special")
    course_holes = IntField(help_text="Number of holes on the course during the round (18/21/24/??)")
    course_par = IntField(help_text="Par of the course")
    course_avg_hole_par = FloatField(help_text="Avg par of the holes on the course")
    course_length_meters = FloatField(help_text="Course length in meters")
    course_length_feet = FloatField(help_text="Course length in feet")
    course_pdga_page = URLField(help_text="Link to the course PDGA page")
    round_total_throws = IntField(help_text="Total number of throws made by players, not counting 999 dnf")
    avg_throws = FloatField(help_text="Dividing the total throws from round with round player count")
    avg_par = FloatField(help_text="Avg par from the round made by all players")
    avg_throw_length_meters = FloatField(help_text="Calculate avg throw length made by player by diving throw count with course length")
    avg_throw_length_meters = FloatField(help_text="Calculate avg throw length made by player by diving throw count with course length")
    dns_count = IntField(help_text="Number of players who DNS this round")
    dnf_count = IntField(help_text="Number of players who DNF this round")

class DivisionPlayer(EmbeddedDocument):
    full_name_1 = StringField(help_text="Full player name")
    pdga_number_1 = IntField(help_text="Player PDGA number")
    pdga_page_1 = URLField(help_text="Player PDGA page link")
    propagator_1 = BooleanField(help_text="Was player propagator during tournament True/False")
    rating_during_tournament_1 = IntField(help_text="Player rating during tournament")
    full_name_2 = StringField(help_text="Full player name if doubles")
    pdga_number_2 = IntField(help_text="Player PDGA number if doubles")
    pdga_page_2 = URLField(help_text="Player PDGA page link if doubles")
    propagator_2 = BooleanField(help_text="Was player propagator during tournament True/False if doubles")
    rating_during_tournament_2 = IntField(help_text="Player rating during tournament if doubles")
    final_placement = IntField(help_text="Player position at the end of the tournament")
    money_won = FloatField(help_text="Prize money won in tournament")
    total_throws = IntField(help_text="Total number of throws made by player")
    total_par = IntField(help_text="Final par of the player")
    avg_throws_per_round = FloatField(help_text="Calculate avg throws per round by dividing total throws with round count")
    avg_par_per_round = FloatField(help_text="Calculate avg par by total par divided by round count")
    avg_round_rating = FloatField(help_text="Calculate by summing up all round ratings and diving by round count")
    avg_throw_length_meters = FloatField(help_text="Calculate avg throw length by calculating length avg for each round and then calculating avg of the throw avgs")
    avg_throw_length_feet = FloatField(help_text="Calculate avg throw length by calculating length avg for each round and then calculating avg of the throw avgs")
    avg_throws_per_hole = FloatField(help_text="Get total number of holes from round course details and divide by total throws")
    event_points = FloatField(help_text="Total PDGA points received from the tournament")
    dns = BooleanField(help_text="Did the player DNS True/False")
    dnf = BooleanField(help_text="Did the player DNF True/False")
    rounds = ListField(EmbeddedDocumentField(PlayerRound))

class Division(EmbeddedDocument):
    name = StringField(help_text="Division full name Open and such")
    short_name = StringField(help_text="MPO/FPO/MP40/J18")
    type = StringField(help_text="Singles/doubles/team")
    total_players = IntField(help_text="Total number of players in division")
    total_throws = IntField(help_text="Total number of throws by all players in division (not counting 999 dnf)")
    avg_player_rating = FloatField(help_text="Avg player rating of all players in division during the tournament")
    avg_round_rating = FloatField(help_text="Avg round rating of all players during tournament in this specific division")
    avg_par = FloatField(help_text="Avg par from all players in the specific division")
    avg_throws = FloatField(help_text="Avg throws from all players in the specific division")
    avg_throw_length_meters = FloatField(help_text="Use the course length to calculate avg throw length of all players made during the tournament")
    avg_throw_length_feet = FloatField(help_text="Use the course length to calculate avg throw length of all players made during the tournament")
    total_hole_count = IntField(help_text="Calculate total number of holes played from individual round course info")
    total_par = IntField(help_text="Calculate the total par of the tournament, r1 par 55, r2 par 56 = total par 111")
    total_course_length_meters = FloatField(help_text="Calculate the total course length from individual round course info")
    total_course_length_feet = FloatField(help_text="Calculate the total course length from individual round course info")
    dns_count = IntField(help_text="Number of DNS from the division in tournament")
    dnf_count = IntField(help_text="Number of DNF from the division in tournament")
    rounds = ListField(EmbeddedDocumentField(DivisionRound))
    players = ListField(EmbeddedDocumentField(DivisionPlayer))

class PlayerYearlyStatistics(EmbeddedDocument):
    year = IntField()
    money_won = FloatField()
    tournaments_played = IntField()
    highest_rating = IntField()
    lowest_rating = IntField()
    year_final_rating = IntField()
    rating_growth = IntField()
    total_points = FloatField()
    certified = BooleanField()
    total_throws = IntField()
    best_round_rating = IntField()
    best_round_rating_tournament_id = IntField()
    lowest_round_rating = IntField()
    lowest_round_rating_tournament_id = IntField()
    best_round_rating_rank_local = IntField()
    best_round_rating_rank_global = IntField()


class Player(Document):
    #Basic data fields
    full_name = StringField(max_lenght=50, help_text="Full non parsed name")
    first_name = StringField(max_lenght=25, help_text="Parsed first name")
    middle_name = StringField(max_lenght=25, help_text="Parsed middle name")
    last_name = StringField(max_lenght=25, help_text="Parsed last name")
    pdga_number = IntField(required=True, help_text="PDGA ID, used to check if player exists in DB")
    pdga_id_status = BooleanField(help_text="Field that tells if the PDGA number is in use or not. There are PDGA numbers between the players that not in use.")
    location_full = StringField(max_lenght=100, help_text="Full non parsed location")
    city = StringField(max_lenght=50, help_text="Parsed city information")
    state = StringField(max_lenght=50, help_text="Parsed state information")
    country = StringField(max_lenght=50, help_text="Parsed country information")
    classification = StringField(max_lenght=25, help_text="If player is pro/am")
    member_since = IntField(max_lenght=4, help_text="Year player registered to PDGA")
    membership_status = BooleanField(help_text="True = Active, False = Inactive. Active/Inactive/Special memberships ie. Eagle club. Special memberships stored in specific field")
    membership_status_expiration_date = DateTimeField(help_text="When the player membership ended. Tells the last year player has been active PDGA member")
    membership = StringField(help_text="Normal/birdie/eagle/ace. Store the special membership name here. Eagle/ace club and keep membership_status as inactive/active")
    current_rating = IntField(max_lenght=5, help_text="PDGA rating at the time of the crawling")
    highest_rating = IntField(max_lenght=5, help_text="Need to crawl highest rating from ratings history and make logic that updates the rating when crawling")
    lowest_rating = IntField(max_lenght=5, help_text="Need to crawl lowest rating and make logic that checks if current rating lower than lowest")
    rating_difference = IntField(max_lenght=5, help_text="Difference between 2 previous ratings, data from PDGA")
    latest_rating_update = DateTimeField(help_text="Date when rating was last updated. Format in PDGA is day-month-year")
    total_events = IntField(max_lenght=6, help_text="How many events player has attended, not sure if includes DNS/DNF tournaments also")
    total_wins = IntField(max_lenght=6, help_text="How many wins during whole PDGA career")
    certified_status = BooleanField(default=False, help_text="If player has done certification exam. Defaults to false as most people haven't done it")
    certified_status_expiration_date = DateTimeField(help_text="Certification lasts for around 3 years. Gives exact date when it expires")
    career_earnings = FloatField(help_text="Total earnings in dollars. Inflation not taken into account")
    individual_tournament_years = ListField(IntField(max_lenght=5), help_text="Checks on how many years player has played in tournaments. Player can be member for 20 years but only play once in a tournament. List that contains played years as int")
    pdga_page_link = URLField(help_text="Direct link to PDGA page. Link could be also generated from the ID")

    #Player analytics/statistic fields generated from tournament data or from other pdga sources other than the player page
    gender = StringField(help_text="Gender info provided by PDGA or from played divisions")
    date_of_birth = StringField(help_text="If we are able to get the exact age somewhere")
    year_of_birth = IntField(help_text="Collected year of birth data from played divisions")
    age_estimate = IntField(help_text="Estimate what is the player age depending on the divisions played in")
    events_as_td = ListField(help_text="List of event IDs where the player was the tournament TD")
    events_as_assistant_td = ListField(help_text="List of event IDs where the player was the assistant tournament TD")
    played_event_ids = ListField(IntField(max_lenght=10), help_text="All pdga events have own IDs, collect the tournament IDs here where the player has participated.")
    played_countries = ListField(StringField(max_lenght=50), help_text="Fun additional info. Collect all countries where the player has played. Make a list that contains individual countries.")
    played_states = ListField()
    played_cities = ListField()
    players_played_with_in_same_tournament = ListField(IntField(max_lenght=15), help_text="Collect all unique player ids of players who have played in the same tournaments as the player in question")
    players_played_with_in_same_divisions = ListField(IntField(max_lenght=15), help_text="Collect all unique player ids of players who have played in the same tournament and same division as the player in question")
    total_throws = IntField(help_text="Collect total number of throws player has thrown in tournaments")
    top_three_placements = IntField(help_text="Number of times the player has placed in the specified range in tournaments")
    top_five_placements = IntField(help_text="Number of times the player has placed in the specified range in tournaments")
    top_ten_placements = IntField(help_text="Number of times the player has placed in the specified range in tournaments")
    total_rounds_played = IntField(help_text="Collect total number of rounds played from tournaments")
    avg_position = FloatField(help_text="Calculate the avg position that the player has had in his tournaments")
    singles_played = IntField()
    doubles_played = IntField()
    teams_played = IntField()
    dns_count = IntField()
    dnf_count = IntField()
    avg_par = FloatField(help_text="Calculate avg par the player has had in all of their tournaments")
    avg_throw_length_feet = FloatField(help_text="Calculate the avg throw length from tournament round data")
    avg_throw_length_meters = FloatField(help_text="Calculate the avg throw length from tournament round data")
    avg_earnings_per_tournament = FloatField(help_text="Avg amount of money made per tournament. Calculate total money won divided by total events played")
    tournaments_played_per_division = DynamicField(help_text="Contains total number of tournaments played by each division, include division name, number of events played in the dynamicfield for each division")
    tournaments_played_per_tier = DynamicField(help_text="Contains total number of tournaments played by each tier, include tier name, number of events played in the dynamicfield for each tier")
    highest_paid_event = DynamicField(help_text="Contains information about the event that the player won most money from. DynamicField should include all necessary info about the tournament")
    best_round_rating = DynamicField(help_text="Contains information about the event that the player had best round rating in. DynamicField should include all necessary info about the tournament")
    best_round_rating_over_rating = DynamicField(help_text="Contains information about the event that the player had when they shot the best rated round that was the most over their rating at that time. DynamicField should include all necessary info about the tournament")
    yearly_statistics = ListField(EmbeddedDocumentField(PlayerYearlyStatistics))

    #Data processing fields
    first_crawl_date = DateTimeField(default=datetime.datetime.now, help_text="Data should be given when crawling, but if it isn't then defaults to datetime now")
    latest_update = DateTimeField(default=datetime.datetime.now, help_text="Should be given when parsed, but if not given gives datetime now")
    fields_updated = ListField(DynamicField(), help_text="If player exists and is recrawled, what data was changed. Dict that contains dynamic data about the fields that were changed and also datetime when it was updated")
    meta = {
	   'indexes': [
            {'fields': ['pdga_number'], 'unique': True},
       ]
    }

class Tournament(Document):
    tournament_name = StringField(help_text="Tournament name displayed on PDGA page")
    tournament_id = IntField(help_text="Tournament ID on PDGA")
    total_players = IntField(help_text="Total number of players who participated on the event")
    tournament_start = DateTimeField(help_text="Start date of the tournament")
    tournament_end = DateTimeField(help_text="End date of the tournament")
    tournament_length_days = IntField(help_text="Number of days the tournament was")
    tournament_year = IntField(help_text="The year the tournament was played, the year is taken from the start date if there tournament extends over to the next year")
    location_full = StringField(max_lenght=100, help_text="Unparsed location of the tournament")
    location_city = StringField(max_lenght=50, help_text="Parsed city from the full location")
    location_state = StringField(max_lenght=50, help_text="Parsed state from the full location")
    location_country = StringField(max_lenght=50, help_text="Parsed country from the full location")
    tournament_director = StringField(help_text="Full name of the tournament or league director")
    tournament_director_id = IntField(help_text="If the tournament director is a pdga member when their PDGA ID can be found")
    tournament_phone = StringField(help_text="This is assumed to be the TD phone number but can be a general number for the tournament")
    tournament_email = StringField(help_text="This is assumed to be the TD email but can be a general email for the tournament")
    assistant_director = StringField(help_text="Assistant tournament or league director full name if available")
    assistant_director_id = IntField(help_text="If assistant director is PDGA member their ID should be on the PDGA page")
    tournament_website = StringField(help_text="Direct link to the tournament website")
    pdga_page_link = StringField(help_text="Direct link to the tournament PDGA page")
    tournament_tier = StringField(help_text="PDGA tournament ranking system from highest to lowest, Major, NT, A, B, C, X, L")
    tournament_classification = StringField(help_text="Tells what divisions are available in the tournament. Pro-Am, Pro, Am")
    tournament_type = ListField(help_text="Is the tournament singles, doubles or team format. Currently tournaments should only be 1 type but this is list field in case for the future.")
    pro_prize_money = FloatField(help_text="Prize pool available for the pro division. AM division can't receive price money")
    avg_total_player_par = IntField(help_text="Avg par calculated by adding together the par results of all players who finished and dividing it by number of players")
    avg_player_rating = IntField(help_text="Avg PDGA rating calculated based on the ratings of the players during the tournament and dividing it by the number of players")
    avg_total_round_rating = IntField(help_text="Check the avg round rating of all players if available and divide it by the number of rounds and number of players")
    avg_money_all_players = FloatField(help_text="Calculate the avg prize money per player by getting the total pro prize pool and dividing it by the number of players in the whole tournament")
    avg_money_mpo_players = FloatField(help_text="Calculate the avg prize money per player by getting the total pro prize pool and dividing it by the number of players in the pro division")
    first_crawl_date = DateTimeField(default=datetime.datetime.now, help_text="Data should be given when crawling, but if it isn't then defaults to datetime now")
    latest_update = DateTimeField(default=datetime.datetime.now, help_text="Should be given when parsed, but if not given gives datetime now")
    fields_updated = ListField(DynamicField(), help_text="If player exists and is recrawled, what data was changed. Dict that contains dynamic data about the fields that were changed and also datetime when it was updated")
    pdga_latest_update = DateTimeField(help_text="Get the date (and time) when the tournament info was last updated or sent to PDGA. Original format in 13-Oct-2019 22:29:25 UTC")
    hole_by_hole_scoring = ListField(help_text="Links to hole by hole scoring pages linked on the tournament page")
    event_results_status = StringField(default="Event report received. Official ratings approved.", help_text="If result report status is availabe crawl it. Unless give the status as ratings are official. Need logic so that upcoming events don't get ratings approved data.")
    players = ListField(help_text="Just PDGA IDs from tournaments to easily check if player was in tournament")
    divisions = ListField(EmbeddedDocumentField(Division), help_text="More indepth data about individual divisions and rounds played in the tournament.")
    meta = {
	   'indexes': [
            {'fields': ['tournament_id'], 'unique': True},
       ]
    }
